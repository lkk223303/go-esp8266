/* Automatically generated nanopb header */
/* Generated by nanopb-0.4.6-dev */

#ifndef PB_PB_TEMP_PB_H_INCLUDED
#define PB_PB_TEMP_PB_H_INCLUDED
#include <pb.h>

#if PB_PROTO_HEADER_VERSION != 40
#error Regenerate this file with the current version of nanopb generator.
#endif

/* Struct definitions */
typedef struct _pb_TempEvent { 
    int32_t deviceId; 
    int32_t eventId; 
    float humidity; 
    float tempCel; 
    float heatIdxCel; 
} pb_TempEvent;


#ifdef __cplusplus
extern "C" {
#endif

/* Initializer values for message structs */
#define pb_TempEvent_init_default                {0, 0, 0, 0, 0}
#define pb_TempEvent_init_zero                   {0, 0, 0, 0, 0}

/* Field tags (for use in manual encoding/decoding) */
#define pb_TempEvent_deviceId_tag                1
#define pb_TempEvent_eventId_tag                 2
#define pb_TempEvent_humidity_tag                3
#define pb_TempEvent_tempCel_tag                 4
#define pb_TempEvent_heatIdxCel_tag              5

/* Struct field encoding specification for nanopb */
#define pb_TempEvent_FIELDLIST(X, a) \
X(a, STATIC,   SINGULAR, INT32,    deviceId,          1) \
X(a, STATIC,   SINGULAR, INT32,    eventId,           2) \
X(a, STATIC,   SINGULAR, FLOAT,    humidity,          3) \
X(a, STATIC,   SINGULAR, FLOAT,    tempCel,           4) \
X(a, STATIC,   SINGULAR, FLOAT,    heatIdxCel,        5)
#define pb_TempEvent_CALLBACK NULL
#define pb_TempEvent_DEFAULT NULL

extern const pb_msgdesc_t pb_TempEvent_msg;

/* Defines for backwards compatibility with code written before nanopb-0.4.0 */
#define pb_TempEvent_fields &pb_TempEvent_msg

/* Maximum encoded size of messages (where known) */
#define pb_TempEvent_size                        37

#ifdef __cplusplus
} /* extern "C" */
#endif

#endif
